---
title: "A Statistical Analysis of Toronto Residents' Engagement and Their City Impression."
subtitle: "Exploring the Correlation Between Engagement and Perception."
author: 
  - Nikhil Iyer
thanks: "Code and data are available at: https://github.com/Niyer02/Toronto-Public-Engagement-Analysis"
date: today
date-format: long
abstract: "Cities go through great lengths to make sure their residents are content, and Toronto is no different. Year after year Toronto is listed as one of the best cities in the world, so how do the people actually living in the city perceive it? Through statistical analysis of survey's conducted by Toronto, the top-level finding was that the overall sentiment did not change, in fact it slightly decreased as resident engagement increased."
format: pdf
number-sections: true
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
      - \floatplacement{figure}{H}
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(opendatatoronto)
library(tidyverse)
library(tibble)
library(dplyr)
library(ggplot2)
library(psych)
library(viridis)
library(knitr)
library(kableExtra)
```

# Introduction

There has been an exponential growth in the number of people living in urban areas than rural, and for the first time, more people live in urban than rural areas [@citeUN]. As a result, residents have a huge impact on the future of the city, and the decisions it makes. Cities are constantly being transformed by the decisions of democratically elected officials and the people [@citeUrban]. 

Generally speaking, residents control the direction of their city. Developments, Costs, Facilities, and more are done based on the demographic of the city, and what the residents want. To obtain this data, cities have a variety of collection methods such as surveys, and annual census'. Due to the amount of data greatly increasing in recent years, statistical analysis has never been more important, and analyzing resident data offers insights to guide the city in choosing it's next steps.

The remainder of this paper analyzes and discusses the results that were formed from [survey data](#survey-data) collected by the city of Toronto [@citeODT]. The following sections will show the statistical methodologies used in this analysis, which all adhere to the best data science practices. This analysis was performed in R[@citeR], using tidyverse[@citeTidy], tibble[@citeTibble], dplyr[@citeDplyr], ggplot2[@citeGG], viridis[@citeVir], knitr[@citeKnitr], and KableExtra[@citeKable]. The desired outcome is that the reader fully understands the methods used, and how the end result was derived.

# Data {#survey-data}

The raw data was collected from Open Data Toronto [@citeODT], and was cleaned in R [@citeR] using the tidyverse [@citeTidy] and dplyr [@citeDplyr] packages. The raw data consisted of 2 types or variables. The first being engagement questions, with binary response values `(NA, 1)`. The second being perception questions with responses ranging from (Strongly agree - Strongly disagree).

Feature engineering is the process of converting raw data (Or in our case, cleaned data) into use able features. We performed feature engineering on the cleaned data set to end up with our desired features, which can be seen in @tbl-base:

```{r}
#| label: tbl-base
#| tbl-cap: "Base Cleaned Data"
#| echo: false

data <- read.csv("/cloud/project/main/Toronto-Public-Engagement-Analysis/outputs/data/analysis_data.csv", check.names = F)


# Add mean of responses
data$engagement_prop <- rowMeans(data[, 2:21])

# Convert the qualitative features to numeric for analysis

# Strongly Disagree -> -2
# Disagree -> -1
# Neither agree nor disagree -> 0
# Agree -> 1
# Strongly Agree ->2
qualitative_mapping <- function(i) {
  i <- tolower(i) # Convert to lowercase
  ifelse(i == "strongly disagree", -2,
         ifelse(i == "disagree", -1,
                ifelse(i == "neither agree nor disagree", 0,
                       ifelse(i == "agree", 1,
                              ifelse(i == "strongly agree", 2, NA)))))}
# Apply mapping function
quantitative_data <- data %>% mutate_at(vars(22:41), ~qualitative_mapping(.))

# calculate the mean of the sentiment
quantitative_data <- quantitative_data %>% mutate(sentiment_average = rowMeans(select(., 22:41), na.rm = TRUE))

display_data <- quantitative_data[, c(ncol(quantitative_data)-1, ncol(quantitative_data))]

kable(head(display_data))
```

## Variables 
The first variable is `engagement_prop` (Engagement Proportion). There were a total of 21 engagement questions, each associated with a distinct type of engagement (Survey, Consultation, etc.), this variable is the mean of all those questions. It is important to note that all engagement questions were structured such that `1` is positive (Participant engaged with the city via this method) and `0` is negative (Participant did not engage with the city via this method). Therefore, higher values of this variable can be interpreted as higher engagement with the city by the participant, while lower values can be interpreted as lower engagement with the city by the participant.

The second variable is `sentiment_average` (Sentiment Average). There were a total of 22 perception questions. Each question was structured s.t `2` is a strong positive sentiment, `-2` is a strong negative sentiment, `0` is neutral, and `1` and `-1` represent a lesser positive and negative sentiment respectively and this variable is the mean of all those questions. Thus, values in the range of `[2, 0)` can be interpreted as positive sentiment, and values in the range of `(0, -2]` can be interpreted as negative sentiment, with the magnitude being represented in the numeric scale.

```{r}
#| label: tbl-sentiment
#| tbl-cap: "Summary statistics for `sentiment_average`"
#| echo: false
#| warning: false
#| message: false
summary_sentiment <- describe(quantitative_data$sentiment_average)

sentiment_summary <- data.frame(
  Variable = "sentiment_average",
  n = summary_sentiment$n,
  Mean = summary_sentiment$mean,
  SD = summary_sentiment$sd,
  Median = summary_sentiment$median,
  Min = summary_sentiment$min,
  Max = summary_sentiment$max,
  Skew = summary_sentiment$skew,
  Kurtosis = summary_sentiment$kurtosis
)

kable(sentiment_summary)
```

```{r}
#| label: tbl-engagement
#| tbl-cap: "Summary statistics for `engagement_prop`"
#| echo: false
#| warning: false
#| message: false
summary_engagement <- describe(quantitative_data$engagement_prop)

engagement_summary <- data.frame(
  Variable = "sentiment_average",
  n = summary_engagement$n,
  Mean = summary_engagement$mean,
  SD = summary_engagement$sd,
  Median = summary_engagement$median,
  Min = summary_engagement$min,
  Max = summary_engagement$max,
  Skew = summary_engagement$skew,
  Kurtosis = summary_engagement$kurtosis
)

kable(engagement_summary)
```

From @tbl-sentiment we can see that the mean sentiment is slightly positive, and has a standard deviation (SD) of 0.41. The skew of the graph is very slightly towards a negative sentiment. The distribution has a kurtosis of 2.9 which implies it has a high peak, and little tails. From @tbl-engagement we can see that the mean engagement is 0.27, which is an average of 5.6 distinct methods of engagement with the city. The distribution also has a standard deviation (SD) of 0.18 The skew and kurtosis are not worth mentioning, as the distribution is modeled on binary data. The distributions of the variables can be seen in @fig-vars. See @fig-vars-1 for `sentiment_average` and @fig-vars-2 for `engagement_prop`.
```{r}
#| label: fig-vars
#| fig-cap: "Distributions for variables of interest"
#| fig-subcap:
#|   - "Distribution of `sentiment_average`"
#|   - "Distribution of `engagement_prop`" 
#| layout-ncol: 2
#| echo: false
#| warning: false
#| message: false
ggplot(quantitative_data, aes(x = sentiment_average, fill = ..x..)) +
  geom_histogram(color = "black", bins = 20) +
  scale_fill_viridis(option = "D", name = "Sentiment") +
  labs(x = "Average Value", y = "Frequency")

ggplot(quantitative_data, aes(x = engagement_prop, fill = ..x..)) +
  geom_histogram(color = "black", bins = 20) +
  scale_fill_viridis(option = "D", name = "Engagement") +
  labs(x = "Average Value", y = "Frequency")
```
# Results

The scatter plot of `engagement_prop` and `sentiment_average` can be seen in @fig-res.

```{r}
#| label: fig-res
#| fig-cap: "Scatterplot of `engagement_prop` and `sentiment_average`"
#| echo: false
#| warning: false
#| message: false
ggplot(quantitative_data, aes (x = engagement_prop, y=sentiment_average)) + 
  geom_point(aes(color = engagement_prop)) +
  geom_smooth(method="loess", se=FALSE, color='black') +
  scale_color_viridis(option = "D")+
  theme_minimal() +
  labs(x="Engagement", y="Sentiment")
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

```

# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

```

\newpage

# References
